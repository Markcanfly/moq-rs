#!/bin/bash
set -euo pipefail

# Change directory to the root of the project
cd "$(dirname "$0")/.."

# Default to a self-signed certificate
# TODO automatically generate if it doesn't exist.
CERT="${CERT:-dev/localhost.crt}"
KEY="${KEY:-dev/localhost.key}"

BIND="${BIND:-[::]}"
PORT="${PORT:-4443}"

export RUST_LOG="${RUST_LOG:-debug}"

# Check for Podman/Docker and set runtime accordingly
if command -v podman &> /dev/null; then
    RUNTIME=podman
elif command -v docker &> /dev/null; then
    RUNTIME=docker
else
    echo "Neither podman or docker found in PATH. Exiting."
    exit 1
fi

REDIS_PORT=${REDIS_PORT:-6400} # The default is 6379, but we'll use 6400 to avoid conflicts

# Run a Redis instance
echo "starting redis"
REDIS_CONTAINER=$($RUNTIME run --rm -d -p "$REDIS_PORT:6379" redis:latest)

# Cleanup function to stop Redis when script exits
cleanup() {
	echo "stopping redis"
    $RUNTIME stop "$REDIS_CONTAINER"
}
trap cleanup EXIT

# Run the relay and forward any arguments
cargo run --bin moq-relay -- --bind "${BIND}:${PORT}" --cert "$CERT" --key "$KEY" --fingerprint --redis "redis://localhost:$REDIS_PORT" --origin "moq://localhost:$PORT" -- "$@"
